/**
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

请必须使用时间复杂度为 O(log n) 的算法。

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/search-insert-position
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
**/

class Solution {
    public int searchInsert(int[] nums, int target) {
        //方法一：
        int i = 0; 
        for(i = 0; i<nums.length; i++){
            while(nums[i]>=target){
                return i;
            }
        }
        return i;

        //二分法：
        // int n = nums.length;
        // int left = 0, right = n - 1, ans = n;
        // while (left <= right) {
        //     int mid = ((right - left) >> 1) + left;
        //     if (target <= nums[mid]) {
        //         ans = mid;
        //         right = mid - 1;
        //     } else {
        //         left = mid + 1;
        //     }
        // }
        // return ans;
    }

    

}
